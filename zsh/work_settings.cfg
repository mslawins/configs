# fpath to docker-compose
fpath=(~/.zsh/completion $fpath)
autoload -Uz compinit && compinit -i

# global aliases
alias decisco="~/decisco/decisco.py --verbose=1"

export PATH=$PATH:/home/mslawins/Aginoodle/aginoodle/scripts:/home/mslawins/Aginoodle/aginoodle/bin

#virtualenvwrapper
export WORKON_HOME=~/Envs
source /usr/share/virtualenvwrapper/virtualenvwrapper.sh

# aginoodle aliases
alias agi="cd ~/Aginoodle/aginoodle"
alias atd="cd ~/Aginoodle/aginoodle/src/backlog/tests"
alias aad="cd ~/Aginoodle/aginoodle/src/backlog/"
alias ast="cd ~/Aginoodle/aginoodle/src/backlog/static"
alias aut="agi; docker-compose exec backend python ./tests.py --disable-pytest-warnings src/backlog/tests/unit_tests/; cd -"
alias amt="agi; docker-compose exec backend python ./tests.py --disable-pytest-warnings src/backlog/tests/module_tests/; cd -"
alias aft="py.test ~/Aginoodle/aginoodle/src/backlog/tests/feature_tests/"
alias jt="jasmine-ci"
alias pep8="pylint --rcfile=$WORKSPACE/config/pylint.cfg --msg-template='{path}:{line}: [{msg_id}({symbol}), {obj}] {msg}'"
alias agirun="agi; bin/backlog runserver_plus"
alias shell="bin/backlog shell_plus"
alias stelle="~/Aginoodle/AginoodleStelle/stelle_run.py"

#marta aliases
alias marta="cd ~/marta-3"
alias mtd="cd ~/marta-3/src/apps/tests"
alias mad="cd ~/marta-3/src/apps/"
alias mst="cd ~/marta-3/src/apps/static"
alias mut="marta; bin/py.test ~/marta-3/src/apps/tests/unit_tests/; cd -"
alias mmt="marta; bin/py.test ~/marta-3/src/apps/tests/module_tests/; cd -"
alias mft="marta; bin/py.test ~/marta-3/src/apps/tests/feature_tests/"
alias mrun="marta; bin/marta-3 runserver"

#onelte aliases
alias onelte="cd ~/one-lte-backlog"
alias ltd="cd ~/onelte/src/apps/tests"
alias lad="cd ~/onelte/src/apps/"
alias lst="cd ~/onelte/src/apps/static"
alias lut="onelte; docker-compose run backend pytest src/apps/tests/unit_tests; cd -"
alias lmt="onelte; docker-compose run backend pytest src/apps/tests/module_tests; cd -"
alias lft="onelte; bin/py.test ~/onelte/src/apps/tests/feature_tests/"
alias lrun="onelte; bin/onelte runserver"
alias lgulp="/home/mslawins/onelte/src/apps/static/node_modules/.bin/gulp"

export LTE_AGINOODLE_BACKUP_LOCATION="durszlak:/home/lte/aginoodle/backups/global_backup/aginoodle.tar.gz"
export LTE_AGINOODLE_GZIPED_BACKUP_FILE="aginoodle.tar.gz"
export LTE_AGINOODLE_UNPACKED_BACKUP_FILE="aginoodle.sql"

export WORKSPACE="$HOME/Aginoodle/aginoodle"


function getagibackup() {
BACKUP_LOCATION=$1
GZIPED_BACKUP_FILE=$2
UNPACKED_BACKUP_FILE=$3
DB_PASSWORD="haslo"

echo "DROP DATABASE aginoodle" | \mysql -u root --password=$DB_PASSWORD
echo "CREATE DATABASE IF NOT EXISTS aginoodle CHARACTER SET=utf8;" | \mysql -u root --password=$DB_PASSWORD
cd $WORKSPACE/backups
scp $BACKUP_LOCATION ./
tar -xzf $GZIPED_BACKUP_FILE
/usr/bin/mysql -u root --password=$DB_PASSWORD aginoodle < $UNPACKED_BACKUP_FILE
backlog migrate
echo "from django.contrib.auth.models import User; User.objects.create_superuser(username='jarzyna', password='admin', email='krzysztof.jarzyna@szczecin.pl', id=0xDEAD)" | backlog shell > /dev/null
echo "from backlog.items.models import PBItem, Tag; PBItem.objects.get(item_id='992.3').tags = Tag.objects.all()" | backlog shell > /dev/null
echo "from datetime import timedelta; from django.contrib.sessions.models import Session; from django.utils import timezone; Session.objects.create(session_key='0xdeadbeef', session_data='MmMxZjdkZDI3ZDBhYmRkN2E4YTI2ZmNhMDZiNTUyMzdkY2U3ZTVmMTp7Il9hdXRoX3VzZXJfaGFzaCI6IjNiMzg3ZDkzM2NmNmQ1MjJlYzllN2Y1ZTJmMzg3ZmQ0MGExOGZmODIiLCJfYXV0aF91c2VyX2lkIjoiNTcwMDUiLCJfYXV0aF91c2VyX2JhY2tlbmQiOiJkamFuZ28uY29udHJpYi5hdXRoLmJhY2tlbmRzLk1vZGVsQmFja2VuZCIsImhhc19wZXJtX3RvX3NlZV90ZWFtX2NhcGFjaXR5IjpbIkZUSzEiLCJGVEsxMCIsIkZUSzExIiwiRlRLMTIiLCJGVEsxMyIsIkZUSzE0IiwiRlRLMTUiLCJGVEsxNiIsIkZUSzIiLCJGVEszIiwiRlRLNCIsIkZUSzUiLCJGVEs2IiwiRlRLNyIsIkZUSzgiLCJGVEs5IiwiRlRXMSIsIkZUVzEwIiwiRlRXMTEiLCJGVFcxMiIsIkZUVzEzIiwiRlRXMTQiLCJGVFcxNSIsIkZUVzE2IiwiRlRXMTciLCJGVFcxOCIsIkZUVzE5IiwiRlRXMiIsIkZUVzIwIiwiRlRXMjEiLCJGVFcyMiIsIkZUVzI5IiwiRlRXMyIsIkZUVzMwIiwiRlRXMzEiLCJGVFczMiIsIkZUVzQiLCJGVFc1IiwiRlRXNiIsIkZUVzciLCJGVFc4IiwiRlRXOSJdfQ==', expire_date=timezone.now() + timedelta(days=30))" | backlog shell > /dev/null
echo "from backlog.aginoodle_shared.models import Attachment; Attachment.objects.all()" | backlog shell
BACKUP_TIME=$(stat -c %y $UNPACKED_BACKUP_FILE)
echo "Got backup from: $BACKUP_TIME"
rm $UNPACKED_BACKUP_FILE
cd - > /dev/null
}

function getltebackup() {
getagibackup $LTE_AGINOODLE_BACKUP_LOCATION $LTE_AGINOODLE_GZIPED_BACKUP_FILE $LTE_AGINOODLE_UNPACKED_BACKUP_FILE
}
